{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Diagram.vue?4ad9","webpack:///./src/App.vue?472c","webpack:///./src/App.vue","webpack:///./src/components/Diagram.vue","webpack:///./src/components/mxGraphUtils.ts","webpack:///./src/components/ContextCell.ts","webpack:///./src/components/Diagram.vue?87d6","webpack:///./src/components/Diagram.vue?b40c","webpack:///./src/components/Editor.vue","webpack:///./src/components/Editor.vue?e9d3","webpack:///./src/components/Editor.vue?ee02","webpack:///./src/components/Markdown.vue","webpack:///./src/components/Markdown.vue?6923","webpack:///./src/components/Markdown.vue?8dc6","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","contextMapYaml","handleContextMapChanged","contextMap","handleContextSelected","handleContextPositionChanged","showDescription","selectedContext","description","zoom","mxBasePath","vertexId","id","defaultSize","defaultMargin","labelheight","minLabelLength","minLabelWidth","labelLengtsPerCharacter","vis","mxGeometry","position","x","y","defaulfStyle","backgroundColor","fontColor","strokeColor","mxConstants","STYLE_OPACITY","context","style","STYLE_FILLCOLOR","STYLE_FONTCOLOR","STYLE_STROKECOLOR","target","label","p1","getGeometry","p2","targetAbove","v1","v2","scal","l1","Math","sqrt","pow","l2","angleRad","acos","angleDeg","round","PI","child","getChild","labelWidth","geo","rotate","mxPoint","contextVertex","getCenterX","getCenterY","labelRotation","setStyle","setGeometry","ohsVertex","mxCell","parent","vertex","insert","getChildCount","found","children","filter","it","contextId","generateStyleString","this","valueChanged","remove","getIndex","getContextCellParent","cell","graph","cells","opacity","allCells","flatMap","setCellStyles","STYLE_FILL_OPACITY","STYLE_TEXT_OPACITY","STYLE_STROKE_OPACITY","editor","mxEditor","visible","props","type","required","mounted","mxClient","isBrowserSupported","container","$el","setGraphContainer","isCellFoldable","isCellEditable","isCellMovable","isVertex","superIsCellSelectable","isCellSelectable","isEdge","model","addListener","mxEvent","CHANGE","handleMxChange","CLICK","handleMxClick","updateGraph","renderContextMap","mxUtils","error","updated","clear","methods","_","evt","getProperty","changes","change","constructor","forEach","geometryChange","contextCell","$emit","geometry","getDefaultParent","relatedEdges","getEdges","relatedVertices","map","edge","source","getChildCells","getAccordingContext","e","deltaY","zoomIn","zoomOut","contexts","ctx","currentContexts","Set","currentRelations","add","drawContext","drawRelations","el","cleanup","getChildVertices","vtx","has","getChildEdges","getId","removeCells","callback","_graph","throwNotDefined","getModel","beginUpdate","console","endUpdate","vtxId","getCell","update","addCell","drawnRelations","relations","rel","fromVtxId","toVtxId","fromCell","targetCell","to","from","targetType","getRelationTerminal","sourceType","insertEdge","orderCells","insertVertex","Error","render","ref","content","undefined","String","$props","hasError","normalize","_editor","operation","cursor","getCursor","viewport","getViewport","setValue","setCursor","scrollIntoView","ch","line","refresh","fromTextArea","lineNumbers","gutters","theme","lint","setSize","on","cm","getValue","compiledMarkdown","knownLanguages","setOptions","highlight","code","lang","indexOf","language","highlightAuto","computed","gfm","components","Diagram","Editor","Markdown","store","state","selectedId","selectedContextId","find","updatedContextMap","updateContextMap","move","jsyaml","yamlStr","newMap","load","log","startYaml","newValue","localStorage","setItem","debug","updateYaml","cloneDeep","currentMetadata","yamlString","dump","skipInvalid","lineWidth","getItem","app","App","mount"],"mappings":"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","file":"js/app.3c558887.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Diagram.vue?vue&type=style&index=0&id=3f40ebd0&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=003675a1&lang=css\"","<template>\n  <div class=\"editor\">\n    <Editor\n      :contextMapYaml=\"contextMapYaml\"\n      @onContextMapChanges=\"handleContextMapChanged\"\n    />\n  </div>\n  <div class=\"diagram\">\n    <Diagram\n      :contextMap=\"contextMap\"\n      @onSelectContext=\"handleContextSelected\"\n      @onContextPositionChanges=\"handleContextPositionChanged\"\n    />\n  </div>\n  <div class=\"markdown\">\n    <Markdown :value=\"selectedContext?.description\" v-if=\"showDescription\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, readonly, toRefs } from \"vue\";\nimport Diagram from \"./components/Diagram.vue\";\nimport Editor from \"./components/Editor.vue\";\nimport Markdown from \"./components/Markdown.vue\";\nimport { ContextPositionUpdate, Store } from \"./main\";\nimport { Context } from \"./model/ContextMap\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Diagram,\n    Editor,\n    Markdown,\n  },\n  data() {\n    const { contextMap, contextMapYaml } = toRefs(this.$props.store.state);\n    return {\n      contextMap: readonly(contextMap),\n      contextMapYaml: readonly(contextMapYaml),\n    };\n  },\n  computed: {\n    showDescription: function (): boolean {\n      return !!this.selectedContext?.description;\n    },\n    selectedContext: function (): Context | null {\n      const selectedId = this.$props.store.state.selectedContextId;\n      if (!selectedId) {\n        return null;\n      } else {\n        return (\n          this.$props.store.state.contextMap.contexts.find(\n            (ctx) => ctx.id === selectedId\n          ) ?? null\n        );\n      }\n    },\n  },\n  methods: {\n    handleContextMapChanged: function (updatedContextMap: string) {\n      this.store.updateContextMap(updatedContextMap);\n    },\n    handleContextSelected(context: Context | null) {\n      this.store.handleContextSelected(context);\n    },\n    handleContextPositionChanged(move: ContextPositionUpdate) {\n      this.store.handleContextPositionChanged(move);\n    },\n  },\n  props: {\n    store: {\n      type: Object as PropType<Store>,\n      required: true,\n    },\n  },\n});\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}\n#app {\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n}\n.item {\n  flex-basis: auto;\n  flex: flex-shrink;\n}\n.h-100 {\n  height: 100%;\n}\n.editor {\n  width: 30%;\n}\n.diagram {\n  height: 100%;\n  width: 40%;\n  overflow: scroll;\n}\n.markdown {\n  height: 100%;\n  width: 30%;\n  overflow: scroll;\n  margin: 0 auto;\n  /* background: #272822; */\n}\n</style>\n","<template>\n  <div @wheel.alt.prevent=\"zoom\" class=\"draw-area h-100\"></div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  mxCell,\n  mxEditor,\n  mxEventObject,\n  mxGeometryChange,\n  mxGraph,\n} from \"mxgraph\";\nimport { defineComponent, PropType, shallowReactive } from \"vue\";\nimport mx from \"./mxGraphUtils\";\nimport { Context, ContextMap } from \"../model/ContextMap\";\nimport { vertexId, ContextCell } from \"./ContextCell\";\n\ninterface State {\n  visible: boolean;\n}\n\nconst getContextCellParent = (\n  cell: mxCell | undefined\n): ContextCell | undefined => {\n  if (!cell) {\n    return undefined;\n  } else if (cell instanceof ContextCell) {\n    return cell;\n  } else if (cell.parent) {\n    return getContextCellParent(cell.parent);\n  } else {\n    return undefined;\n  }\n};\n\nconst highlightCell = (graph: mxGraph, cells: mxCell[], opacity: number) => {\n  const allCells = [...cells, ...cells.flatMap((cell) => cell.children)];\n\n  graph.setCellStyles(mx.mxConstants.STYLE_FILL_OPACITY, opacity, allCells);\n  graph.setCellStyles(mx.mxConstants.STYLE_TEXT_OPACITY, opacity, allCells);\n  graph.setCellStyles(mx.mxConstants.STYLE_STROKE_OPACITY, opacity, allCells);\n};\n\nconst editor: mxEditor = new mx.mxEditor();\n\nexport default defineComponent({\n  name: \"Diagram\",\n  data(): State {\n    return shallowReactive({\n      visible: true,\n    });\n  },\n  props: {\n    contextMap: {\n      type: Object as PropType<ContextMap>,\n      required: true,\n    },\n  },\n  mounted() {\n    if (!mx.mxClient.isBrowserSupported()) {\n      mx.mxUtils.error(\"Browser is not supported!\", 200, false);\n    } else {\n      const container = this.$el;\n\n      editor.setGraphContainer(container);\n\n      const graph = editor.graph;\n      graph.isCellFoldable = (): boolean => false;\n      graph.isCellEditable = (): boolean => false;\n      graph.isCellMovable = (cell: mxCell): boolean => cell.isVertex();\n      const superIsCellSelectable = graph.isCellSelectable;\n      graph.isCellSelectable = (cell: mxCell) => {\n        return (\n          superIsCellSelectable.apply(graph, [cell]) &&\n          !cell.isEdge() &&\n          cell instanceof ContextCell\n        );\n      };\n      graph.model.addListener(mx.mxEvent.CHANGE, this.handleMxChange);\n      graph.addListener(mx.mxEvent.CLICK, this.handleMxClick);\n\n      this.updateGraph(this.renderContextMap);\n    }\n  },\n  updated() {\n    this.updateGraph((graph) => {\n      graph.model.clear();\n    });\n    this.updateGraph(this.renderContextMap);\n  },\n  methods: {\n    handleMxChange(_: mxGraph, evt: mxEventObject) {\n      evt\n        .getProperty(\"edit\")\n        .changes.filter(\n          (change: Record<string, unknown>) =>\n            change.constructor.name === \"mxGeometryChange\"\n        )\n        .forEach((change: mxGeometryChange) => {\n          const geometryChange: mxGeometryChange = change;\n\n          const contextCell = getContextCellParent(geometryChange.cell);\n          contextCell &&\n            this.$emit(\"onContextPositionChanges\", {\n              contextId: contextCell.contextId,\n              position: {\n                x: geometryChange.geometry.x,\n                y: geometryChange.geometry.y,\n              },\n            });\n        });\n    },\n    handleMxClick(graph: mxGraph, evt: mxEventObject) {\n      const cell = getContextCellParent(evt.getProperty(\"cell\"));\n      const parent = graph.getDefaultParent();\n      if (cell) {\n        this.updateGraph(() => {\n          const relatedEdges = cell.children\n            .filter((child: mxCell) => child.isVertex())\n            .flatMap((child: mxCell) => graph.getEdges(child));\n          const relatedVertices = relatedEdges\n            .map((edge) =>\n              getContextCellParent(edge.source) === cell\n                ? edge.target\n                : edge.source\n            )\n            .filter((vertex) => !!vertex)\n            .flatMap((vertex) => {\n              if (vertex instanceof ContextCell) {\n                return [vertex];\n              } else {\n                const contextCell = getContextCellParent(vertex);\n                return !contextCell\n                  ? [vertex]\n                  : [vertex, contextCell.contextVertex];\n              }\n            });\n\n          const allCells = graph\n            .getChildCells(parent)\n            .flatMap((child: mxCell) =>\n              mxCell instanceof ContextCell ? mxCell.children : [child]\n            );\n\n          highlightCell(graph, allCells, 50);\n          highlightCell(\n            graph,\n            [cell, ...relatedEdges, ...relatedVertices],\n            100\n          );\n        });\n        this.$emit(\"onSelectContext\", this.getAccordingContext(cell));\n      } else {\n        this.$emit(\"onSelectContext\", null);\n        highlightCell(graph, graph.getChildCells(parent), 100);\n      }\n    },\n    zoom(e: WheelEvent) {\n      if (e.deltaY > 0) {\n        editor?.graph?.zoomIn();\n      } else {\n        editor?.graph?.zoomOut();\n      }\n    },\n    getAccordingContext(cell: ContextCell): Context {\n      return this.contextMap.contexts.filter(\n        (ctx) => ctx.id === cell.contextId\n      )[0];\n    },\n    renderContextMap(graph: mxGraph) {\n      const model = graph.model;\n      const parent = graph.getDefaultParent();\n\n      const currentContexts = new Set<string>();\n      const currentRelations = new Set<string>();\n      this.contextMap.contexts.forEach((ctx: Context) => {\n        currentContexts.add(ctx.id);\n        drawContext(ctx);\n      });\n\n      this.contextMap.contexts.forEach((ctx: Context) => {\n        drawRelations(ctx).forEach((el) => currentRelations.add(el));\n      });\n\n      // cleanup\n      const cleanup: Array<mxCell> = [];\n      model.getChildVertices(parent).forEach((vtx) => {\n        if (vtx instanceof ContextCell && !currentContexts.has(vtx.contextId)) {\n          cleanup.push(vtx);\n        }\n      });\n\n      model.getChildEdges(parent).forEach((vtx) => {\n        if (!currentRelations.has(vtx.getId())) {\n          cleanup.push(vtx);\n        }\n      });\n\n      graph.removeCells(cleanup);\n    },\n    updateGraph(callback: (graph: mxGraph) => void) {\n      const _graph: mxGraph = editor?.graph ?? throwNotDefined<mxGraph>();\n      const model = _graph.getModel();\n      model.beginUpdate();\n      try {\n        callback.apply(this, [_graph]);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        // Updates the display\n        model.endUpdate();\n        // _graph.refresh();\n      }\n    },\n  },\n});\n\nfunction drawContext(ctx: Context) {\n  const graph: mxGraph = editor?.graph ?? throwNotDefined();\n  const model = graph.model;\n\n  const vtxId = vertexId(ctx.id);\n\n  if (!model.getCell(vtxId)) {\n    const cell = new ContextCell(ctx);\n    graph.addCell(cell);\n  } else {\n    const cell = model.getCell(vtxId) as ContextCell;\n    cell.update(ctx);\n  }\n}\n\nfunction drawRelations(ctx: Context): Set<string> {\n  const drawnRelations = new Set<string>();\n  const graph: mxGraph = editor?.graph ?? throwNotDefined();\n  const model = graph.model;\n\n  const parent = graph.getDefaultParent();\n  ctx.relations?.forEach((rel) => {\n    const fromVtxId = vertexId(ctx.id);\n    const toVtxId = vertexId(rel.target);\n    const fromCell = model.getCell(fromVtxId) as ContextCell | null;\n    const targetCell = model.getCell(toVtxId) as ContextCell | null;\n\n    if (fromCell && targetCell) {\n      let to: mxCell = targetCell.contextVertex;\n      let from: mxCell = fromCell.contextVertex;\n      const id = `${ctx.id}-${rel.target}`;\n\n      if (rel.targetType) {\n        to =\n          targetCell.getRelationTerminal(fromCell, rel.targetType) ??\n          throwNotDefined();\n      } else {\n        // TODO does not work ATM\n        // targetCell.removeRelationTerminal(from)\n      }\n\n      if (rel.sourceType) {\n        from =\n          fromCell.getRelationTerminal(targetCell, rel.sourceType) ??\n          throwNotDefined();\n      } else {\n        // TODO does not work ATM\n        // targetCell.removeRelationTerminal(from)\n      }\n\n      if (!model.getCell(id)) {\n        const edge = graph.insertEdge(\n          parent,\n          id,\n          \"\",\n          from,\n          to,\n          \"startArrow=none;endArrow=none;strokeWidth=2;strokeColor=#1B1B1B;entryX=0.5;entryY=0.5;exitX=0.5;exitY=0.5;exitPerimeter=0;entryPerimeter=0;\"\n        );\n        graph.orderCells(true, [edge]);\n        graph.insertVertex(\n          edge,\n          null,\n          \"U\",\n          0.7,\n          0,\n          1,\n          1,\n          \"fontSize=16;fontColor=#000000;fillColor=#ffffff;strokeColor=none;\",\n          true\n        );\n        graph.insertVertex(\n          edge,\n          null,\n          \"D\",\n          -0.7,\n          0,\n          1,\n          1,\n          \"fontSize=16;fontColor=#000000;fillColor=#ffffff;strokeColor=none;rounded=1;arcSize=25;strokeWidth=3;\",\n          true\n        );\n      }\n      drawnRelations.add(id);\n    }\n  });\n  return drawnRelations;\n}\n\nfunction throwNotDefined<T>(): T {\n  throw new Error(\"\");\n}\n</script>\n\n<style>\ndiv.draw-area {\n  background-image: url(\"/grid.gif\");\n}\n</style>\n","import factory from \"mxgraph\";\n\n// eslint-disable-next-line\n(window as any)[\"mxBasePath\"] = \"public/mxgraph\";\n\nexport default factory({\n  // not working see https://github.com/jgraph/mxgraph/issues/479\n  mxBasePath: \"public/mxgraph\",\n});\n","import { mxCell, mxGeometry } from \"mxgraph\";\nimport mx from \"./mxGraphUtils\";\nimport { Context, VisualisationMetaData } from \"../model/ContextMap\";\n\nexport const vertexId = (id: string): string => `_ctx_${id}`;\n\nconst defaultSize = 100;\nconst defaultMargin = 10;\n\nconst labelheight = 20;\nconst minLabelLength = 3;\nconst minLabelWidth = 30;\nconst labelLengtsPerCharacter = 10;\n\nconst createGeometry = (vis: VisualisationMetaData): mxGeometry => {\n  return new mx.mxGeometry(\n    vis.position?.x,\n    vis.position?.y,\n    defaultSize + 2 * defaultMargin,\n    defaultSize + 2 * defaultMargin\n  );\n};\n\nconst defaulfStyle: VisualisationMetaData = {\n  backgroundColor: \"#FD506A\",\n  fontColor: \"#1B1B1B\",\n  strokeColor: \"#1B1B1B\",\n  position: { x: 0, y: 0 },\n};\n\nexport class ContextCell extends mx.mxCell {\n  readonly contextVertex: mxCell;\n  readonly contextId: string;\n\n  constructor(context: Context) {\n    super(\n      null,\n      createGeometry({ ...defaulfStyle, ...context[\"x-viz-metadata\"] }),\n      `${mx.mxConstants.STYLE_OPACITY}=0;`\n    );\n    this.contextId = context.id;\n    this.id = vertexId(context.id);\n    this.vertex = true;\n\n    this.contextVertex = new mx.mxCell(\n      context.name ?? context.id,\n      new mx.mxGeometry(defaultMargin, 10, defaultSize, defaultSize),\n      this.generateStyleString(context)\n    );\n    this.contextVertex.id = `${this.id}.contextVertex`;\n    this.contextVertex.parent = this;\n    this.contextVertex.vertex = true;\n\n    this.insert(this.contextVertex, this.getChildCount());\n  }\n\n  private generateStyleString = (context: Context): string => {\n    const vis = { ...defaulfStyle, ...context[\"x-viz-metadata\"] };\n    let style = \"shape=ellipse;fontStyle=1\";\n    style += `;${mx.mxConstants.STYLE_FILLCOLOR}=${vis.backgroundColor}`;\n    style += `;${mx.mxConstants.STYLE_FONTCOLOR}=${vis.fontColor}`;\n    style += `;${mx.mxConstants.STYLE_STROKECOLOR}=${vis.strokeColor}`;\n    return style;\n  };\n\n  update(context: Context): void {\n    this.contextVertex.valueChanged(context.name ?? context.id);\n    this.contextVertex.setStyle(this.generateStyleString(context));\n  }\n\n  removeRelationTerminal(target: ContextCell): void {\n    const id = `${this.id}.${target.id}`;\n\n    const child = this.getChild(id);\n    if (child) {\n      this.remove(this.getIndex(child));\n    }\n  }\n\n  getRelationTerminal = (target: ContextCell, label: string): mxCell => {\n    const p1 = { x: this.getGeometry().x, y: this.getGeometry().y };\n    const p2 = { x: target.getGeometry().x, y: target.getGeometry().y };\n    const targetAbove = p1.y > p2.y;\n\n    const v1 = { x: p1.x - p2.x, y: p1.y - p2.y };\n    const v2 = { x: -1, y: 0 };\n\n    const scal = v1.x * v2.x + v1.y * v2.y;\n\n    const l1 = Math.sqrt(Math.pow(v1.x, 2) + Math.pow(v1.y, 2));\n    const l2 = Math.sqrt(Math.pow(v2.x, 2) + Math.pow(v2.y, 2));\n\n    const angleRad = Math.acos(scal / (l1 * l2));\n\n    const angleDeg = Math.round(angleRad * (180 / Math.PI));\n    // console.log({p1, p2, v1, v2, scal, length1: l1, length2: l2, angle: angleDeg, center: this.getGeometry(), relation: `${this.contextId}-${target.contextId}`})\n\n    const id = `${this.id}.${target.id}`;\n\n    const child = this.getChild(id);\n\n    const labelWidth =\n      label.length < minLabelLength\n        ? minLabelWidth\n        : label.length * labelLengtsPerCharacter;\n    const geo = new mx.mxGeometry(\n      118 - labelWidth / 2,\n      50,\n      labelWidth,\n      labelheight\n    );\n\n    geo.rotate(\n      targetAbove ? 360 - angleDeg : angleDeg - 360,\n      new mx.mxPoint(\n        this.contextVertex.getGeometry().getCenterX(),\n        this.contextVertex.getGeometry().getCenterY()\n      )\n    );\n\n    const labelRotation = targetAbove ? 90 - angleDeg : angleDeg - 90;\n    const style = `fillColor=#5BCCAF;strokeColor=#1B1B1B;rotation=${labelRotation};`;\n    if (child) {\n      child.setStyle(style);\n      child.setGeometry(geo);\n      return child;\n    }\n\n    const ohsVertex = new mx.mxCell(label, geo, style);\n    ohsVertex.id = id;\n    ohsVertex.parent = this;\n    ohsVertex.vertex = true;\n    this.insert(ohsVertex, this.getChildCount());\n    return ohsVertex;\n  };\n\n  // private static OPACITY_CONSTANTS = [\n  //     mx.mxConstants.STYLE_FILL_OPACITY,\n  //     mx.mxConstants.STYLE_TEXT_OPACITY,\n  //     mx.mxConstants.STYLE_STROKE_OPACITY,\n  // ]\n  // highlight = (opacity: number) => {\n  //     [this, ...this.children].forEach((cell: mxCell) => {\n  //         cell.setStyle(ContextCell.OPACITY_CONSTANTS.map(constant => (`${constant}=${opacity}`)).join(';'))\n  //     })\n  // }\n\n  private getChild = (id: string): mxCell | undefined => {\n    const found = this.children.filter((it) => it?.id === id);\n    if (found.length == 0) {\n      return undefined;\n    }\n    return found[0];\n  };\n}\n","\nimport {\n  mxCell,\n  mxEditor,\n  mxEventObject,\n  mxGeometryChange,\n  mxGraph,\n} from \"mxgraph\";\nimport { defineComponent, PropType, shallowReactive } from \"vue\";\nimport mx from \"./mxGraphUtils\";\nimport { Context, ContextMap } from \"../model/ContextMap\";\nimport { vertexId, ContextCell } from \"./ContextCell\";\n\ninterface State {\n  visible: boolean;\n}\n\nconst getContextCellParent = (\n  cell: mxCell | undefined\n): ContextCell | undefined => {\n  if (!cell) {\n    return undefined;\n  } else if (cell instanceof ContextCell) {\n    return cell;\n  } else if (cell.parent) {\n    return getContextCellParent(cell.parent);\n  } else {\n    return undefined;\n  }\n};\n\nconst highlightCell = (graph: mxGraph, cells: mxCell[], opacity: number) => {\n  const allCells = [...cells, ...cells.flatMap((cell) => cell.children)];\n\n  graph.setCellStyles(mx.mxConstants.STYLE_FILL_OPACITY, opacity, allCells);\n  graph.setCellStyles(mx.mxConstants.STYLE_TEXT_OPACITY, opacity, allCells);\n  graph.setCellStyles(mx.mxConstants.STYLE_STROKE_OPACITY, opacity, allCells);\n};\n\nconst editor: mxEditor = new mx.mxEditor();\n\nexport default defineComponent({\n  name: \"Diagram\",\n  data(): State {\n    return shallowReactive({\n      visible: true,\n    });\n  },\n  props: {\n    contextMap: {\n      type: Object as PropType<ContextMap>,\n      required: true,\n    },\n  },\n  mounted() {\n    if (!mx.mxClient.isBrowserSupported()) {\n      mx.mxUtils.error(\"Browser is not supported!\", 200, false);\n    } else {\n      const container = this.$el;\n\n      editor.setGraphContainer(container);\n\n      const graph = editor.graph;\n      graph.isCellFoldable = (): boolean => false;\n      graph.isCellEditable = (): boolean => false;\n      graph.isCellMovable = (cell: mxCell): boolean => cell.isVertex();\n      const superIsCellSelectable = graph.isCellSelectable;\n      graph.isCellSelectable = (cell: mxCell) => {\n        return (\n          superIsCellSelectable.apply(graph, [cell]) &&\n          !cell.isEdge() &&\n          cell instanceof ContextCell\n        );\n      };\n      graph.model.addListener(mx.mxEvent.CHANGE, this.handleMxChange);\n      graph.addListener(mx.mxEvent.CLICK, this.handleMxClick);\n\n      this.updateGraph(this.renderContextMap);\n    }\n  },\n  updated() {\n    this.updateGraph((graph) => {\n      graph.model.clear();\n    });\n    this.updateGraph(this.renderContextMap);\n  },\n  methods: {\n    handleMxChange(_: mxGraph, evt: mxEventObject) {\n      evt\n        .getProperty(\"edit\")\n        .changes.filter(\n          (change: Record<string, unknown>) =>\n            change.constructor.name === \"mxGeometryChange\"\n        )\n        .forEach((change: mxGeometryChange) => {\n          const geometryChange: mxGeometryChange = change;\n\n          const contextCell = getContextCellParent(geometryChange.cell);\n          contextCell &&\n            this.$emit(\"onContextPositionChanges\", {\n              contextId: contextCell.contextId,\n              position: {\n                x: geometryChange.geometry.x,\n                y: geometryChange.geometry.y,\n              },\n            });\n        });\n    },\n    handleMxClick(graph: mxGraph, evt: mxEventObject) {\n      const cell = getContextCellParent(evt.getProperty(\"cell\"));\n      const parent = graph.getDefaultParent();\n      if (cell) {\n        this.updateGraph(() => {\n          const relatedEdges = cell.children\n            .filter((child: mxCell) => child.isVertex())\n            .flatMap((child: mxCell) => graph.getEdges(child));\n          const relatedVertices = relatedEdges\n            .map((edge) =>\n              getContextCellParent(edge.source) === cell\n                ? edge.target\n                : edge.source\n            )\n            .filter((vertex) => !!vertex)\n            .flatMap((vertex) => {\n              if (vertex instanceof ContextCell) {\n                return [vertex];\n              } else {\n                const contextCell = getContextCellParent(vertex);\n                return !contextCell\n                  ? [vertex]\n                  : [vertex, contextCell.contextVertex];\n              }\n            });\n\n          const allCells = graph\n            .getChildCells(parent)\n            .flatMap((child: mxCell) =>\n              mxCell instanceof ContextCell ? mxCell.children : [child]\n            );\n\n          highlightCell(graph, allCells, 50);\n          highlightCell(\n            graph,\n            [cell, ...relatedEdges, ...relatedVertices],\n            100\n          );\n        });\n        this.$emit(\"onSelectContext\", this.getAccordingContext(cell));\n      } else {\n        this.$emit(\"onSelectContext\", null);\n        highlightCell(graph, graph.getChildCells(parent), 100);\n      }\n    },\n    zoom(e: WheelEvent) {\n      if (e.deltaY > 0) {\n        editor?.graph?.zoomIn();\n      } else {\n        editor?.graph?.zoomOut();\n      }\n    },\n    getAccordingContext(cell: ContextCell): Context {\n      return this.contextMap.contexts.filter(\n        (ctx) => ctx.id === cell.contextId\n      )[0];\n    },\n    renderContextMap(graph: mxGraph) {\n      const model = graph.model;\n      const parent = graph.getDefaultParent();\n\n      const currentContexts = new Set<string>();\n      const currentRelations = new Set<string>();\n      this.contextMap.contexts.forEach((ctx: Context) => {\n        currentContexts.add(ctx.id);\n        drawContext(ctx);\n      });\n\n      this.contextMap.contexts.forEach((ctx: Context) => {\n        drawRelations(ctx).forEach((el) => currentRelations.add(el));\n      });\n\n      // cleanup\n      const cleanup: Array<mxCell> = [];\n      model.getChildVertices(parent).forEach((vtx) => {\n        if (vtx instanceof ContextCell && !currentContexts.has(vtx.contextId)) {\n          cleanup.push(vtx);\n        }\n      });\n\n      model.getChildEdges(parent).forEach((vtx) => {\n        if (!currentRelations.has(vtx.getId())) {\n          cleanup.push(vtx);\n        }\n      });\n\n      graph.removeCells(cleanup);\n    },\n    updateGraph(callback: (graph: mxGraph) => void) {\n      const _graph: mxGraph = editor?.graph ?? throwNotDefined<mxGraph>();\n      const model = _graph.getModel();\n      model.beginUpdate();\n      try {\n        callback.apply(this, [_graph]);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        // Updates the display\n        model.endUpdate();\n        // _graph.refresh();\n      }\n    },\n  },\n});\n\nfunction drawContext(ctx: Context) {\n  const graph: mxGraph = editor?.graph ?? throwNotDefined();\n  const model = graph.model;\n\n  const vtxId = vertexId(ctx.id);\n\n  if (!model.getCell(vtxId)) {\n    const cell = new ContextCell(ctx);\n    graph.addCell(cell);\n  } else {\n    const cell = model.getCell(vtxId) as ContextCell;\n    cell.update(ctx);\n  }\n}\n\nfunction drawRelations(ctx: Context): Set<string> {\n  const drawnRelations = new Set<string>();\n  const graph: mxGraph = editor?.graph ?? throwNotDefined();\n  const model = graph.model;\n\n  const parent = graph.getDefaultParent();\n  ctx.relations?.forEach((rel) => {\n    const fromVtxId = vertexId(ctx.id);\n    const toVtxId = vertexId(rel.target);\n    const fromCell = model.getCell(fromVtxId) as ContextCell | null;\n    const targetCell = model.getCell(toVtxId) as ContextCell | null;\n\n    if (fromCell && targetCell) {\n      let to: mxCell = targetCell.contextVertex;\n      let from: mxCell = fromCell.contextVertex;\n      const id = `${ctx.id}-${rel.target}`;\n\n      if (rel.targetType) {\n        to =\n          targetCell.getRelationTerminal(fromCell, rel.targetType) ??\n          throwNotDefined();\n      } else {\n        // TODO does not work ATM\n        // targetCell.removeRelationTerminal(from)\n      }\n\n      if (rel.sourceType) {\n        from =\n          fromCell.getRelationTerminal(targetCell, rel.sourceType) ??\n          throwNotDefined();\n      } else {\n        // TODO does not work ATM\n        // targetCell.removeRelationTerminal(from)\n      }\n\n      if (!model.getCell(id)) {\n        const edge = graph.insertEdge(\n          parent,\n          id,\n          \"\",\n          from,\n          to,\n          \"startArrow=none;endArrow=none;strokeWidth=2;strokeColor=#1B1B1B;entryX=0.5;entryY=0.5;exitX=0.5;exitY=0.5;exitPerimeter=0;entryPerimeter=0;\"\n        );\n        graph.orderCells(true, [edge]);\n        graph.insertVertex(\n          edge,\n          null,\n          \"U\",\n          0.7,\n          0,\n          1,\n          1,\n          \"fontSize=16;fontColor=#000000;fillColor=#ffffff;strokeColor=none;\",\n          true\n        );\n        graph.insertVertex(\n          edge,\n          null,\n          \"D\",\n          -0.7,\n          0,\n          1,\n          1,\n          \"fontSize=16;fontColor=#000000;fillColor=#ffffff;strokeColor=none;rounded=1;arcSize=25;strokeWidth=3;\",\n          true\n        );\n      }\n      drawnRelations.add(id);\n    }\n  });\n  return drawnRelations;\n}\n\nfunction throwNotDefined<T>(): T {\n  throw new Error(\"\");\n}\n","import { render } from \"./Diagram.vue?vue&type=template&id=3f40ebd0\"\nimport script from \"./Diagram.vue?vue&type=script&lang=ts\"\nexport * from \"./Diagram.vue?vue&type=script&lang=ts\"\n\nimport \"./Diagram.vue?vue&type=style&index=0&id=3f40ebd0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <textarea ref=\"textarea\" v-model=\"content\"></textarea>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/addon/lint/lint.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/monokai.css\";\nimport \"codemirror/mode/yaml/yaml\";\nimport \"codemirror/addon/lint/lint\";\nimport \"codemirror/addon/lint/yaml-lint\";\n\nvar editor: undefined | CodeMirror.EditorFromTextArea = undefined;\n\nexport default defineComponent({\n  name: \"Editor\",\n  props: {\n    contextMapYaml: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      content: this.$props.contextMapYaml,\n      hasError: false,\n    } as {\n      editor?: CodeMirror.EditorFromTextArea;\n      hasError: boolean;\n      content: string;\n    };\n  },\n  updated() {\n    if (this.content.normalize() !== this.contextMapYaml.normalize()) {\n      this.content = this.contextMapYaml;\n      if (editor) {\n        const _editor = editor;\n        _editor.operation(() => {\n          const cursor = _editor.getCursor();\n          const viewport = _editor.getViewport();\n          _editor.setValue(this.content);\n          _editor.setCursor(cursor);\n          _editor.scrollIntoView({ ch: cursor.ch, line: viewport.to });\n          _editor.refresh();\n        });\n      }\n    }\n  },\n  mounted() {\n    editor = CodeMirror.fromTextArea(this.$el, {\n      lineNumbers: true, // display line number\n      mode: \"text/x-yaml\", // grammar model\n      gutters: [\"CodeMirror-lint-markers\"], // Syntax checker\n      theme: \"monokai\", // Editor theme\n      lint: true, // Turn on grammar checking\n    });\n    editor.setSize(\"100%\", \"100%\");\n    editor.on(\"change\", (cm) => {\n      if (cm.getValue() !== this.contextMapYaml) {\n        this.$emit(\"onContextMapChanges\", cm.getValue());\n      }\n    });\n  },\n});\n</script>\n\n<style></style>\n","\nimport { defineComponent } from \"vue\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/addon/lint/lint.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/monokai.css\";\nimport \"codemirror/mode/yaml/yaml\";\nimport \"codemirror/addon/lint/lint\";\nimport \"codemirror/addon/lint/yaml-lint\";\n\nvar editor: undefined | CodeMirror.EditorFromTextArea = undefined;\n\nexport default defineComponent({\n  name: \"Editor\",\n  props: {\n    contextMapYaml: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      content: this.$props.contextMapYaml,\n      hasError: false,\n    } as {\n      editor?: CodeMirror.EditorFromTextArea;\n      hasError: boolean;\n      content: string;\n    };\n  },\n  updated() {\n    if (this.content.normalize() !== this.contextMapYaml.normalize()) {\n      this.content = this.contextMapYaml;\n      if (editor) {\n        const _editor = editor;\n        _editor.operation(() => {\n          const cursor = _editor.getCursor();\n          const viewport = _editor.getViewport();\n          _editor.setValue(this.content);\n          _editor.setCursor(cursor);\n          _editor.scrollIntoView({ ch: cursor.ch, line: viewport.to });\n          _editor.refresh();\n        });\n      }\n    }\n  },\n  mounted() {\n    editor = CodeMirror.fromTextArea(this.$el, {\n      lineNumbers: true, // display line number\n      mode: \"text/x-yaml\", // grammar model\n      gutters: [\"CodeMirror-lint-markers\"], // Syntax checker\n      theme: \"monokai\", // Editor theme\n      lint: true, // Turn on grammar checking\n    });\n    editor.setSize(\"100%\", \"100%\");\n    editor.on(\"change\", (cm) => {\n      if (cm.getValue() !== this.contextMapYaml) {\n        this.$emit(\"onContextMapChanges\", cm.getValue());\n      }\n    });\n  },\n});\n","import { render } from \"./Editor.vue?vue&type=template&id=5f0e9ef6\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div v-html=\"compiledMarkdown\" class=\"markdown-content\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport marked from \"marked\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/monokai.css\";\n\nconst knownLanguages = [\"java\", \"javscript\", \"bash\"];\n\nmarked.setOptions({\n  highlight: function (code, lang) {\n    let result: { value: string };\n    if (lang && knownLanguages.indexOf(lang) > -1) {\n      result = hljs.highlight(code, { language: lang });\n    } else {\n      result = hljs.highlightAuto(code);\n    }\n    return result.value;\n  },\n});\n\nexport default defineComponent({\n  props: {\n    value: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    compiledMarkdown(): string {\n      return marked(this.value, { gfm: true });\n    },\n  },\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport marked from \"marked\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/monokai.css\";\n\nconst knownLanguages = [\"java\", \"javscript\", \"bash\"];\n\nmarked.setOptions({\n  highlight: function (code, lang) {\n    let result: { value: string };\n    if (lang && knownLanguages.indexOf(lang) > -1) {\n      result = hljs.highlight(code, { language: lang });\n    } else {\n      result = hljs.highlightAuto(code);\n    }\n    return result.value;\n  },\n});\n\nexport default defineComponent({\n  props: {\n    value: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    compiledMarkdown(): string {\n      return marked(this.value, { gfm: true });\n    },\n  },\n});\n","import { render } from \"./Markdown.vue?vue&type=template&id=0e6b936c\"\nimport script from \"./Markdown.vue?vue&type=script&lang=ts\"\nexport * from \"./Markdown.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent, PropType, readonly, toRefs } from \"vue\";\nimport Diagram from \"./components/Diagram.vue\";\nimport Editor from \"./components/Editor.vue\";\nimport Markdown from \"./components/Markdown.vue\";\nimport { ContextPositionUpdate, Store } from \"./main\";\nimport { Context } from \"./model/ContextMap\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Diagram,\n    Editor,\n    Markdown,\n  },\n  data() {\n    const { contextMap, contextMapYaml } = toRefs(this.$props.store.state);\n    return {\n      contextMap: readonly(contextMap),\n      contextMapYaml: readonly(contextMapYaml),\n    };\n  },\n  computed: {\n    showDescription: function (): boolean {\n      return !!this.selectedContext?.description;\n    },\n    selectedContext: function (): Context | null {\n      const selectedId = this.$props.store.state.selectedContextId;\n      if (!selectedId) {\n        return null;\n      } else {\n        return (\n          this.$props.store.state.contextMap.contexts.find(\n            (ctx) => ctx.id === selectedId\n          ) ?? null\n        );\n      }\n    },\n  },\n  methods: {\n    handleContextMapChanged: function (updatedContextMap: string) {\n      this.store.updateContextMap(updatedContextMap);\n    },\n    handleContextSelected(context: Context | null) {\n      this.store.handleContextSelected(context);\n    },\n    handleContextPositionChanged(move: ContextPositionUpdate) {\n      this.store.handleContextPositionChanged(move);\n    },\n  },\n  props: {\n    store: {\n      type: Object as PropType<Store>,\n      required: true,\n    },\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=003675a1\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=003675a1&lang=css\"\nscript.render = render\n\nexport default script","import { createApp, reactive } from \"vue\";\nimport App from \"./App.vue\";\n\nimport { Context, ContextMap, VizContextPosition } from \"./model/ContextMap\";\nimport yaml from \"js-yaml\";\nimport _ from \"lodash\";\n\nwindow.jsyaml = yaml;\n\nconst parseYaml = (\n  yamlStr: string\n): { contextMap: ContextMap; error?: Error } => {\n  try {\n    const newMap: ContextMap = yaml.load(yamlStr) as ContextMap;\n\n    return { contextMap: newMap };\n  } catch (e) {\n    console.log(\"Invalid YAML\");\n    return {\n      contextMap: {\n        contexts: [],\n      },\n      error: e,\n    };\n  }\n};\n\nexport interface State {\n  contextMap: ContextMap;\n  selectedContextId: string | null;\n  contextMapYaml: string;\n}\n\nexport interface ContextPositionUpdate {\n  contextId: string;\n  position: VizContextPosition;\n}\n\nexport interface Store {\n  state: State;\n  updateContextMap: (newValue: string) => void;\n  handleContextSelected: (context: Context | null) => void;\n  handleContextPositionChanged: (move: ContextPositionUpdate) => void;\n}\n\nclass StoreImpl implements Store {\n  private debug = false;\n\n  state = reactive<State>({\n    contextMapYaml: startYaml,\n    contextMap: parseYaml(startYaml).contextMap,\n    selectedContextId: null,\n  });\n\n  private updateYaml(newValue: string) {\n    this.state.contextMapYaml = newValue;\n    window.localStorage.setItem(\"lastMap\", newValue);\n  }\n\n  updateContextMap(newValue: string) {\n    if (this.debug) {\n      console.log(\"setMessageAction triggered with\", newValue);\n    }\n\n    const { contextMap, error } = parseYaml(newValue);\n    if (!error) {\n      this.state.contextMap = contextMap;\n    }\n    this.updateYaml(newValue);\n  }\n\n  handleContextSelected(context: Context | null) {\n    this.state.selectedContextId = context?.id ?? null;\n  }\n\n  handleContextPositionChanged(move: ContextPositionUpdate) {\n    if (this.debug) {\n      console.log(\"handleContextPositionChanged triggered with\", move);\n    }\n\n    const newMap: ContextMap = _.cloneDeep(this.state.contextMap);\n    const ctx = newMap.contexts.find((it) => it.id === move.contextId);\n    if (ctx) {\n      const currentMetadata = ctx[\"x-viz-metadata\"];\n      ctx[\"x-viz-metadata\"] = {\n        ...currentMetadata,\n        position: move.position,\n      };\n\n      // const rawContext = toRaw(newMap)\n      try {\n        const yamlString = yaml.dump(newMap, {\n          skipInvalid: true,\n          lineWidth: -1,\n        });\n        this.updateYaml(yamlString);\n        this.state.contextMap = newMap;\n        console.log([\"Updated Position\", move, newMap, yamlString]);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n}\n\nconst startYaml: string =\n  window.localStorage.getItem(\"lastMap\") ??\n  \"---\\ncontexts:\\n\" +\n    \"  - id: test\\n\" +\n    \"    name: test\\n\" +\n    \"    relations:\\n\" +\n    \"      - target: test2\\n\" +\n    \"  - id: test2\\n\" +\n    \"    name: test-2\";\n\nconst store = new StoreImpl();\n\nconst app = createApp(App, {\n  store,\n});\n// app.use(PrimeVue);\napp.mount(\"#app\");\n"],"sourceRoot":""}